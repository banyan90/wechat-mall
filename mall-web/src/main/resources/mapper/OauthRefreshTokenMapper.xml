<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jiumao.wechatMall.dao.OauthRefreshTokenDao">
    <!-- OauthRefreshToken的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_OauthRefreshToken_Map" type="org.jiumao.wechatMall.entity.OauthRefreshToken">
        <result column="create_time" property="createTime" />
        <result column="token_id" property="tokenId" />
        <result column="token" property="token" />
        <result column="authentication" property="authentication" />
    </resultMap>

	   <!-- Assist用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="Assist">
        <where>
            <foreach collection="require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

	   <!-- updateAssist用于更新数据的使用它拓展自Assist,用于辅助工具类setRequires设置的条件,${req.require}表示列名,#{req.value}表示值它是防SQL注入的 -->
    <sql id="updateAssist">
        <where>
            <foreach collection="assist.require" item="req" separator=" ">
                ${req.require} #{req.value} <if test="req.suffix != null"> ${req.suffix}</if>
            </foreach>
        </where>
    </sql>

    <!-- 数据库中表名为:oauth_refresh_token的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="oauth_refresh_token_Column">
        oauth_refresh_token.create_time as create_time
        ,oauth_refresh_token.token_id as token_id
        ,oauth_refresh_token.token as token
        ,oauth_refresh_token.authentication as authentication
    </sql>

    <!--获得类名为:OauthRefreshToken对应的数据库表的数据总行数 -->
    <select id="getOauthRefreshTokenRowCount" parameterType="org.jiumao.wechatMall.common.Assist" resultType="java.lang.Long">
        select count(*) from oauth_refresh_token
        <if test="require!=null"><include refid="Assist" /></if>
    </select>
    <!-- 获得类名为:OauthRefreshToken对应数据库中表的数据集合 -->
    <select id="selectOauthRefreshToken" parameterType="org.jiumao.wechatMall.common.Assist"  resultMap="result_OauthRefreshToken_Map">
        select  <if test="distinct !=null">${distinct}</if>
        <choose>
            <when test="resultColumn!=null">${resultColumn}</when>
            <otherwise>
        <include refid="oauth_refresh_token_Column" /> 
            </otherwise>
        </choose>
        from oauth_refresh_token
        <choose>
            <when test="rowSize ==null">
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
            </when>
            <otherwise>
                inner join
                (
                SELECT null as primary_key FROM oauth_refresh_token
                <if test="require!=null">
                    <include refid="Assist" />
                </if>
                <if test="order !=null">${order}</if>
                <choose>
                    <when test="startRow !=null and rowSize !=null">LIMIT #{startRow},#{rowSize} </when>
                    <when test="rowSize !=null">LIMIT #{rowSize}</when>
                 </choose>
                 ) as tmp
                 on tmp.primary_key=oauth_refresh_token.null
            </otherwise>
        </choose>
    </select> 

    <!-- 将OauthRefreshToken插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertOauthRefreshToken" parameterType="org.jiumao.wechatMall.entity.OauthRefreshToken">
        insert into oauth_refresh_token(create_time,token_id,token,authentication) 
        values(#{createTime},#{tokenId},#{token},#{authentication})
    </insert>

    <!-- 将OauthRefreshToken中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyOauthRefreshToken" parameterType="org.jiumao.wechatMall.entity.OauthRefreshToken">
        insert into oauth_refresh_token
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createTime != null">create_time,</if>
            <if test="tokenId != null">token_id,</if>
            <if test="token != null">token,</if>
            <if test="authentication != null">authentication,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createTime != null"> #{createTime},</if>
            <if test="tokenId != null"> #{tokenId},</if>
            <if test="token != null"> #{token},</if>
            <if test="authentication != null"> #{authentication},</if>
        </trim>
    </insert>

    <!-- 通过辅助工具Assist中的条件将OauthRefreshToken对应的数据库表的数据删除-->
    <delete id="deleteOauthRefreshToken" parameterType="org.jiumao.wechatMall.common.Assist">
        delete from oauth_refresh_token
        <if test="require!=null"><include refid="Assist" /></if>
    </delete>

</mapper>